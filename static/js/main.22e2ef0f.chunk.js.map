{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","className","name","current","onClick","handleChange","Circles","App","e","setState","selected","target","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAeeA,MAXf,SAAwBC,GACpB,OACI,sBAAKC,UAAU,iBAAf,UACI,wBAAQC,KAAM,EAAGD,UAA4B,GAAjBD,EAAMG,QAAe,WAAa,GAAIC,QAASJ,EAAMK,aAAjF,SAAgH,GAAhBL,EAAMG,QAAc,oBAAsB,oBAC1I,wBAAQD,KAAM,EAAGD,UAA4B,GAAjBD,EAAMG,QAAe,WAAa,GAAIC,QAASJ,EAAMK,aAAjF,SAAgH,GAAhBL,EAAMG,QAAc,oBAAsB,oBAC1I,wBAAQD,KAAM,EAAGD,UAA4B,GAAjBD,EAAMG,QAAe,WAAa,GAAIC,QAASJ,EAAMK,aAAjF,SAAgH,GAAhBL,EAAMG,QAAc,oBAAsB,oBAC1I,wBAAQD,KAAM,EAAGD,UAA4B,GAAjBD,EAAMG,QAAe,WAAa,GAAIC,QAASJ,EAAMK,aAAjF,SAAgH,GAAhBL,EAAMG,QAAc,oBAAsB,wB,MCIvIG,MAXf,SAAiBN,GACb,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKC,KAAM,EAAGD,UAA4B,GAAjBD,EAAMG,QAAe,WAAa,MAA3D,eACA,qBAAKD,KAAM,EAAGD,UAA4B,GAAjBD,EAAMG,QAAe,WAAa,MAA3D,eACA,qBAAKD,KAAM,EAAGD,UAA4B,GAAjBD,EAAMG,QAAe,WAAa,MAA3D,eACA,qBAAKD,KAAM,EAAGD,UAA4B,GAAjBD,EAAMG,QAAe,WAAa,MAA3D,mBCqBGI,E,kDAxBb,aAAe,IAAD,8BACZ,gBAMFF,aAAe,SAACG,GACd,EAAKC,SAAS,CAACC,SAAUF,EAAEG,OAAOT,QANlC,EAAKU,MAAQ,CACXF,SAAU,GAHA,E,0CAWd,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CAAgBE,QAASU,KAAKD,MAAMF,SAAUL,aAAcQ,KAAKR,eACjE,cAAC,EAAD,CAASF,QAASU,KAAKD,MAAMF,SAAUL,aAAcQ,KAAKR,yB,GAlBlDS,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.22e2ef0f.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleSelector.css'\n\n\nfunction CircleSelector(props) {\n    return (\n        <div className=\"CircleSelector\">\n            <button name={1} className={props.current == 1 ? 'selected' : ''} onClick={props.handleChange}>{props.current ==1 ? 'Circle 1 Selected' : 'Select Circle 1'}</button>\n            <button name={2} className={props.current == 2 ? 'selected' : ''} onClick={props.handleChange}>{props.current ==2 ? 'Circle 2 Selected' : 'Select Circle 2'}</button>\n            <button name={3} className={props.current == 3 ? 'selected' : ''} onClick={props.handleChange}>{props.current ==3 ? 'Circle 3 Selected' : 'Select Circle 3'}</button>\n            <button name={4} className={props.current == 4 ? 'selected' : ''} onClick={props.handleChange}>{props.current ==4 ? 'Circle 4 Selected' : 'Select Circle 4'}</button>\n        </div>\n    )\n}\n\nexport default CircleSelector\n","import React from 'react'\nimport './Circles.css'\n\nfunction Circles(props) {\n    return (\n        <div className=\"Circles\">\n            <div name={1} className={props.current == 1 ? 'selected' : 'div'}>1</div>\n            <div name={2} className={props.current == 2 ? 'selected' : 'div'}>2</div>\n            <div name={3} className={props.current == 3 ? 'selected' : 'div'}>3</div>\n            <div name={4} className={props.current == 4 ? 'selected' : 'div'}>4</div>\n        </div>\n    )\n}\n\nexport default Circles\n","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from './components/CircleSelector/CircleSelector'\nimport Circles from './components/Circles/Circles'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      selected: 1,\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({selected: e.target.name})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector current={this.state.selected} handleChange={this.handleChange}/>\n          <Circles current={this.state.selected} handleChange={this.handleChange}/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}